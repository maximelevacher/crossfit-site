{"ast":null,"code":"var _jsxFileName = \"/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst muscleExercises = {\n  abs: ['Plank 30s', '20 crunchs', '15 leg raises'],\n  pecs: ['20 push-ups', 'Incline press', 'Chest dips'],\n  'biceps-left': ['Curl haltÃ¨re', 'Chin-ups', 'Curl marteau'],\n  'quads-left': ['20 squats', '15 fentes', 'Jump squats'],\n  glutes: ['Hip thrusts', 'Glute bridge', 'Step-ups'],\n  traps: ['Shrugs', 'Upright row']\n};\nconst getRandomWod = exList => [...exList].sort(() => 0.5 - Math.random()).slice(0, 3);\nconst Wod = () => {\n  _s();\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [wod, setWod] = useState([]);\n  const handleSelect = muscle => {\n    setSelectedMuscle(muscle);\n    setWod(getRandomWod(muscleExercises[muscle] || []));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"G\\xE9n\\xE9rateur de WOD par muscle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"S\\xE9lectionne un muscle \\uD83D\\uDC47\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MuscleMapFull, {\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), selectedMuscle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Exercises for: \", selectedMuscle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: exercise\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Wod, \"KYE+EVZSh0kxN7MnHk9z3vhlqxw=\");\n_c = Wod;\nexport default Wod;\nvar _c;\n$RefreshReg$(_c, \"Wod\");","map":{"version":3,"names":["React","useState","MuscleMapFull","jsxDEV","_jsxDEV","muscleExercises","abs","pecs","glutes","traps","getRandomWod","exList","sort","Math","random","slice","Wod","_s","selectedMuscle","setSelectedMuscle","wod","setWod","handleSelect","muscle","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","className","exercises","map","exercise","index","_c","$RefreshReg$"],"sources":["/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\n\nconst muscleExercises = {\n  abs: ['Plank 30s', '20 crunchs', '15 leg raises'],\n  pecs: ['20 push-ups', 'Incline press', 'Chest dips'],\n  'biceps-left': ['Curl haltÃ¨re', 'Chin-ups', 'Curl marteau'],\n  'quads-left': ['20 squats', '15 fentes', 'Jump squats'],\n  glutes: ['Hip thrusts', 'Glute bridge', 'Step-ups'],\n  traps: ['Shrugs', 'Upright row'],\n};\n\nconst getRandomWod = (exList) => [...exList].sort(() => 0.5 - Math.random()).slice(0, 3);\n\nconst Wod = () => {\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [wod, setWod] = useState([]);\n\n  const handleSelect = (muscle) => {\n\n    setSelectedMuscle(muscle);\n    setWod(getRandomWod(muscleExercises[muscle] || []));\n  };\n\n  return (\n    <div style={{ textAlign: 'center', padding: '2rem' }}>\n      <h1>GÃ©nÃ©rateur de WOD par muscle</h1>\n      <p>SÃ©lectionne un muscle ðŸ‘‡</p>\n\n      <MuscleMapFull onSelect={handleSelect} />\n\n      {selectedMuscle && (\n          <div className=\"exercise-list\">\n            <h3>Exercises for: {selectedMuscle}</h3>\n            <ul>\n              {exercises.map((exercise, index) => (\n                  <li key={index}>{exercise}</li>\n              ))}\n            </ul>\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default Wod;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,eAAe,GAAG;EACtBC,GAAG,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,eAAe,CAAC;EACjDC,IAAI,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC;EACpD,aAAa,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,cAAc,CAAC;EAC3D,YAAY,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,CAAC;EACvDC,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,UAAU,CAAC;EACnDC,KAAK,EAAE,CAAC,QAAQ,EAAE,aAAa;AACjC,CAAC;AAED,MAAMC,YAAY,GAAIC,MAAM,IAAK,CAAC,GAAGA,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAExF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmB,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMqB,YAAY,GAAIC,MAAM,IAAK;IAE/BJ,iBAAiB,CAACI,MAAM,CAAC;IACzBF,MAAM,CAACX,YAAY,CAACL,eAAe,CAACkB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;EACrD,CAAC;EAED,oBACEnB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDvB,OAAA;MAAAuB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC3B,OAAA;MAAAuB,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE/B3B,OAAA,CAACF,aAAa;MAAC8B,QAAQ,EAAEV;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExCb,cAAc,iBACXd,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAN,QAAA,gBAC5BvB,OAAA;QAAAuB,QAAA,GAAI,iBAAe,EAACT,cAAc;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxC3B,OAAA;QAAAuB,QAAA,EACGO,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3BjC,OAAA;UAAAuB,QAAA,EAAiBS;QAAQ,GAAhBC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
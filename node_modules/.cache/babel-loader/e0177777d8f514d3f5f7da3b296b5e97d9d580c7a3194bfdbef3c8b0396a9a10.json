{"ast":null,"code":"var _jsxFileName = \"/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport './Wod.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WOD_PARTS = ['warmup', 'strength', 'metcon'];\nconst Wod = () => {\n  _s();\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [exercises, setExercises] = useState([]);\n  const [randomWod, setRandomWod] = useState(null);\n  const handleMuscleSelect = muscle => {\n    setSelectedMuscle(muscle);\n    setRandomWod(null);\n  };\n  useEffect(() => {\n    if (!selectedMuscle) return;\n    fetch(`/exercises/${selectedMuscle}.txt`).then(res => res.text()).then(text => {\n      const lines = text.split('\\n').filter(Boolean);\n      setExercises(lines);\n    }).catch(() => setExercises([]));\n  }, [selectedMuscle]);\n  const generateRandomWod = () => {\n    const parts = {};\n    WOD_PARTS.forEach(part => {\n      const muscleList = ['quads', 'glutes', 'hamstrings', 'pecs', 'lats', 'abs', 'triceps', 'biceps', 'calves'];\n      const muscle = muscleList[Math.floor(Math.random() * muscleList.length)];\n      parts[part] = {\n        muscle,\n        exercise: null\n      };\n    });\n\n    // Load exercise text files for all 3 parts\n    Promise.all(Object.values(parts).map(item => fetch(`/exercises/${item.muscle}.txt`).then(res => res.text()).then(text => {\n      const list = text.split('\\n').filter(Boolean);\n      return list[Math.floor(Math.random() * list.length)];\n    }).catch(() => 'Rest'))).then(exs => {\n      let i = 0;\n      for (let key of WOD_PARTS) {\n        parts[key].exercise = exs[i++];\n      }\n      setRandomWod(parts);\n      setSelectedMuscle(null);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wod-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"wod-title\",\n      children: \"\\uD83D\\uDD25 Generate Your WOD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomWod,\n      className: \"random-btn\",\n      children: \"\\uD83C\\uDFB2 Generate Full WOD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Or Select a Muscle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuscleMapFull, {\n      onSelect: handleMuscleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), selectedMuscle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"exercise-heading\",\n        children: [\"\\uD83D\\uDCAA Exercises for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muscle-name\",\n          children: selectedMuscle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-grid\",\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-icon\",\n            children: \"\\uD83C\\uDFCB\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-name\",\n            children: exercise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), randomWod && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-wod\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD25 Full WOD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), WOD_PARTS.map(part => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wod-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: part.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: randomWod[part].exercise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this), \" (\", randomWod[part].muscle, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, part, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(Wod, \"YvguzWPfT+O8Wb1Kmu3PnL1FRE0=\");\n_c = Wod;\nexport default Wod;\nvar _c;\n$RefreshReg$(_c, \"Wod\");","map":{"version":3,"names":["React","useState","useEffect","MuscleMapFull","jsxDEV","_jsxDEV","WOD_PARTS","Wod","_s","selectedMuscle","setSelectedMuscle","exercises","setExercises","randomWod","setRandomWod","handleMuscleSelect","muscle","fetch","then","res","text","lines","split","filter","Boolean","catch","generateRandomWod","parts","forEach","part","muscleList","Math","floor","random","length","exercise","Promise","all","Object","values","map","item","list","exs","i","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelect","index","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport './Wod.css';\n\nconst WOD_PARTS = ['warmup', 'strength', 'metcon'];\n\nconst Wod = () => {\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [exercises, setExercises] = useState([]);\n  const [randomWod, setRandomWod] = useState(null);\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscle(muscle);\n    setRandomWod(null);\n  };\n\n  useEffect(() => {\n    if (!selectedMuscle) return;\n    fetch(`/exercises/${selectedMuscle}.txt`)\n        .then((res) => res.text())\n        .then((text) => {\n          const lines = text.split('\\n').filter(Boolean);\n          setExercises(lines);\n        })\n        .catch(() => setExercises([]));\n  }, [selectedMuscle]);\n\n  const generateRandomWod = () => {\n    const parts = {};\n    WOD_PARTS.forEach((part) => {\n      const muscleList = ['quads', 'glutes', 'hamstrings', 'pecs', 'lats', 'abs', 'triceps', 'biceps', 'calves'];\n      const muscle = muscleList[Math.floor(Math.random() * muscleList.length)];\n      parts[part] = {\n        muscle,\n        exercise: null,\n      };\n    });\n\n    // Load exercise text files for all 3 parts\n    Promise.all(\n        Object.values(parts).map((item) =>\n            fetch(`/exercises/${item.muscle}.txt`)\n                .then((res) => res.text())\n                .then((text) => {\n                  const list = text.split('\\n').filter(Boolean);\n                  return list[Math.floor(Math.random() * list.length)];\n                })\n                .catch(() => 'Rest')\n        )\n    ).then((exs) => {\n      let i = 0;\n      for (let key of WOD_PARTS) {\n        parts[key].exercise = exs[i++];\n      }\n      setRandomWod(parts);\n      setSelectedMuscle(null);\n    });\n  };\n\n  return (\n      <div className=\"wod-page\">\n        <h2 className=\"wod-title\">🔥 Generate Your WOD</h2>\n\n        <button onClick={generateRandomWod} className=\"random-btn\">\n          🎲 Generate Full WOD\n        </button>\n\n        <h3 className=\"section-title\">Or Select a Muscle</h3>\n        <MuscleMapFull onSelect={handleMuscleSelect} />\n\n        {selectedMuscle && (\n            <div className=\"exercise-section\">\n              <h3 className=\"exercise-heading\">\n                💪 Exercises for: <span className=\"muscle-name\">{selectedMuscle}</span>\n              </h3>\n              <div className=\"exercise-grid\">\n                {exercises.map((exercise, index) => (\n                    <div key={index} className=\"exercise-card\">\n                      <div className=\"exercise-icon\">🏋️</div>\n                      <div className=\"exercise-name\">{exercise}</div>\n                    </div>\n                ))}\n              </div>\n            </div>\n        )}\n\n        {randomWod && (\n            <div className=\"random-wod\">\n              <h3>🔥 Full WOD:</h3>\n              {WOD_PARTS.map((part) => (\n                  <div key={part} className=\"wod-block\">\n                    <h4>{part.toUpperCase()}</h4>\n                    <p>\n                      <strong>{randomWod[part].exercise}</strong> ({randomWod[part].muscle})\n                    </p>\n                  </div>\n              ))}\n            </div>\n        )}\n      </div>\n  );\n};\n\nexport default Wod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
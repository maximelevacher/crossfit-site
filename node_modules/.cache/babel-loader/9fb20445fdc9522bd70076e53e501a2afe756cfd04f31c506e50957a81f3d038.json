{"ast":null,"code":"var _jsxFileName = \"/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wodOptions = [{\n  label: 'WOD',\n  prompt: 'Generate a classic CrossFit WOD with warm-up, workout, and cool-down.'\n}, {\n  label: 'WOD Team',\n  prompt: 'Generate a team-based CrossFit WOD for 2 or more people. Include team movements and strategy.'\n}, {\n  label: 'Gymnastic',\n  prompt: 'Generate a CrossFit-style gymnastic workout focused on bodyweight movements and skills.'\n}, {\n  label: 'Bootylucius',\n  prompt: 'Generate a Bootylucius-style CrossFit workout focused on glutes and legs.'\n}, {\n  label: 'Hyrox',\n  prompt: 'Generate a Hyrox-style workout combining running and functional fitness.'\n}];\nconst Wod = () => {\n  _s();\n  const [selectedWod, setSelectedWod] = useState(wodOptions[0]);\n  const [loading, setLoading] = useState(false);\n  const [wod, setWod] = useState('');\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    const selected = wodOptions.find(opt => opt.label === e.target.value);\n    setSelectedWod(selected);\n    setWod('');\n    setError(null);\n  };\n  const generateWod = async () => {\n    setLoading(true);\n    setError(null);\n    setWod('');\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer YOUR_OPENAI_API_KEY` // Replace with your API key (or from .env)\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: selectedWod.prompt\n          }],\n          temperature: 0.7\n        })\n      });\n      const data = await response.json();\n      const message = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content;\n      if (message) {\n        setWod(message.trim());\n      } else {\n        setError('No WOD received.');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Error generating WOD.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Your WOD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: selectedWod.label,\n        style: {\n          padding: '0.5rem',\n          fontSize: '1rem'\n        },\n        children: wodOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateWod,\n      disabled: loading,\n      children: loading ? 'Generating...' : 'Generate WOD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), wod && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        textAlign: 'left',\n        whiteSpace: 'pre-wrap',\n        marginTop: '2rem',\n        maxWidth: '600px',\n        marginInline: 'auto'\n      },\n      children: wod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Wod, \"hu1ZVBOiYhbk7AoFZiEEk3H1UkM=\");\n_c = Wod;\nexport default Wod;\nvar _c;\n$RefreshReg$(_c, \"Wod\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","wodOptions","label","prompt","Wod","_s","selectedWod","setSelectedWod","loading","setLoading","wod","setWod","error","setError","handleChange","e","selected","find","opt","target","value","generateWod","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","temperature","data","json","message","choices","trim","err","console","className","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onChange","padding","fontSize","map","option","onClick","disabled","color","whiteSpace","marginTop","maxWidth","marginInline","_c","$RefreshReg$"],"sources":["/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst wodOptions = [\n  { label: 'WOD', prompt: 'Generate a classic CrossFit WOD with warm-up, workout, and cool-down.' },\n  { label: 'WOD Team', prompt: 'Generate a team-based CrossFit WOD for 2 or more people. Include team movements and strategy.' },\n  { label: 'Gymnastic', prompt: 'Generate a CrossFit-style gymnastic workout focused on bodyweight movements and skills.' },\n  { label: 'Bootylucius', prompt: 'Generate a Bootylucius-style CrossFit workout focused on glutes and legs.' },\n  { label: 'Hyrox', prompt: 'Generate a Hyrox-style workout combining running and functional fitness.' },\n];\n\nconst Wod = () => {\n  const [selectedWod, setSelectedWod] = useState(wodOptions[0]);\n  const [loading, setLoading] = useState(false);\n  const [wod, setWod] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleChange = (e) => {\n    const selected = wodOptions.find(opt => opt.label === e.target.value);\n    setSelectedWod(selected);\n    setWod('');\n    setError(null);\n  };\n\n  const generateWod = async () => {\n    setLoading(true);\n    setError(null);\n    setWod('');\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer YOUR_OPENAI_API_KEY`, // Replace with your API key (or from .env)\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'user',\n              content: selectedWod.prompt,\n            },\n          ],\n          temperature: 0.7,\n        }),\n      });\n\n      const data = await response.json();\n      const message = data.choices?.[0]?.message?.content;\n\n      if (message) {\n        setWod(message.trim());\n      } else {\n        setError('No WOD received.');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Error generating WOD.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <section className=\"section\" style={{ textAlign: 'center' }}>\n      <h2>Generate Your WOD</h2>\n\n      <div style={{ marginBottom: '1rem' }}>\n        <select onChange={handleChange} value={selectedWod.label} style={{ padding: '0.5rem', fontSize: '1rem' }}>\n          {wodOptions.map(option => (\n            <option key={option.label} value={option.label}>{option.label}</option>\n          ))}\n        </select>\n      </div>\n\n      <button onClick={generateWod} disabled={loading}>\n        {loading ? 'Generating...' : 'Generate WOD'}\n      </button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {wod && (\n        <pre style={{ textAlign: 'left', whiteSpace: 'pre-wrap', marginTop: '2rem', maxWidth: '600px', marginInline: 'auto' }}>\n          {wod}\n        </pre>\n      )}\n    </section>\n  );\n};\n\nexport default Wod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
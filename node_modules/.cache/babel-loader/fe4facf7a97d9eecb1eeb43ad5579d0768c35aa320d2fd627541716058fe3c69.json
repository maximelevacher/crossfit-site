{"ast":null,"code":"var _jsxFileName = \"/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport './Wod.css'; // new CSS for enhanced layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wod = () => {\n  _s();\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [exercises, setExercises] = useState([]);\n  const handleMuscleSelect = muscle => {\n    setSelectedMuscle(muscle);\n  };\n  useEffect(() => {\n    if (!selectedMuscle) return;\n    fetch(`/exercises/${selectedMuscle}.txt`).then(res => res.text()).then(text => {\n      const lines = text.split('\\n').filter(Boolean);\n      setExercises(lines);\n    }).catch(() => setExercises([]));\n  }, [selectedMuscle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wod-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"wod-title\",\n      children: \"\\uD83D\\uDD25 Generate WOD by Muscle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuscleMapFull, {\n      onSelect: handleMuscleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), selectedMuscle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"exercise-heading\",\n        children: [\"\\uD83D\\uDCAA Exercises for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muscle-name\",\n          children: selectedMuscle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-grid\",\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-icon\",\n            children: \"\\uD83C\\uDFCB\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-name\",\n            children: exercise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(Wod, \"UsjcN5mK3ZC9j4oiqPXjiNUZmmw=\");\n_c = Wod;\nexport default Wod;\nvar _c;\n$RefreshReg$(_c, \"Wod\");","map":{"version":3,"names":["React","useState","useEffect","MuscleMapFull","jsxDEV","_jsxDEV","Wod","_s","selectedMuscle","setSelectedMuscle","exercises","setExercises","handleMuscleSelect","muscle","fetch","then","res","text","lines","split","filter","Boolean","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","exercise","index","_c","$RefreshReg$"],"sources":["/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport './Wod.css'; // new CSS for enhanced layout\n\nconst Wod = () => {\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [exercises, setExercises] = useState([]);\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscle(muscle);\n  };\n\n  useEffect(() => {\n    if (!selectedMuscle) return;\n\n    fetch(`/exercises/${selectedMuscle}.txt`)\n        .then((res) => res.text())\n        .then((text) => {\n          const lines = text.split('\\n').filter(Boolean);\n          setExercises(lines);\n        })\n        .catch(() => setExercises([]));\n  }, [selectedMuscle]);\n\n  return (\n      <div className=\"wod-page\">\n        <h2 className=\"wod-title\">üî• Generate WOD by Muscle</h2>\n        <MuscleMapFull onSelect={handleMuscleSelect} />\n\n        {selectedMuscle && (\n            <div className=\"exercise-section\">\n              <h3 className=\"exercise-heading\">\n                üí™ Exercises for: <span className=\"muscle-name\">{selectedMuscle}</span>\n              </h3>\n              <div className=\"exercise-grid\">\n                {exercises.map((exercise, index) => (\n                    <div key={index} className=\"exercise-card\">\n                      <div className=\"exercise-icon\">üèãÔ∏è</div>\n                      <div className=\"exercise-name\">{exercise}</div>\n                    </div>\n                ))}\n              </div>\n            </div>\n        )}\n      </div>\n  );\n};\n\nexport default Wod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
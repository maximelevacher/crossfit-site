{"ast":null,"code":"var _jsxFileName = \"/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst muscleExercises = {\n  'quads-left': ['20 squats', '15 lunges', '10 jump squats'],\n  'quads-right': ['20 squats', '15 lunges', '10 jump squats'],\n  'abs-left': ['30s plank', '20 crunches', '15 leg raises'],\n  'abs-right': ['30s plank', '20 crunches', '15 leg raises'],\n  'hamstrings-left': ['15 hip thrusts', '20 deadlifts', '30s bridge hold'],\n  'hamstrings-right': ['15 hip thrusts', '20 deadlifts', '30s bridge hold']\n  // Ajoute plus ici...\n};\nconst getRandomWod = exercises => {\n  const shuffled = [...exercises].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, 3);\n};\nconst Wod = () => {\n  _s();\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [wod, setWod] = useState([]);\n  const handleMuscleSelect = muscleId => {\n    setSelectedMuscle(muscleId);\n    const exercises = muscleExercises[muscleId];\n    if (exercises) {\n      const generatedWod = getRandomWod(exercises);\n      setWod(generatedWod);\n    } else {\n      setWod([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wod-page\",\n    style: {\n      textAlign: 'center',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"G\\xE9n\\xE9rateur de WOD cibl\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"S\\xE9lectionne une zone musculaire sur le visuel pour g\\xE9n\\xE9rer un entra\\xEEnement personnalis\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MuscleMapFull, {\n      onSelect: handleMuscleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this), selectedMuscle && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"WOD pour : \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          children: selectedMuscle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), wod.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: wod.map((ex, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '0.5rem 0',\n            fontSize: '1.2rem'\n          },\n          children: [\"\\uD83D\\uDD25 \", ex]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: \"Aucun exercice disponible pour ce muscle.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Wod, \"KYE+EVZSh0kxN7MnHk9z3vhlqxw=\");\n_c = Wod;\nexport default Wod;\nvar _c;\n$RefreshReg$(_c, \"Wod\");","map":{"version":3,"names":["React","useState","MuscleMapFull","jsxDEV","_jsxDEV","muscleExercises","getRandomWod","exercises","shuffled","sort","Math","random","slice","Wod","_s","selectedMuscle","setSelectedMuscle","wod","setWod","handleMuscleSelect","muscleId","generatedWod","className","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","marginTop","textTransform","length","listStyle","map","ex","index","margin","fontSize","fontStyle","_c","$RefreshReg$"],"sources":["/Users/maximelevacher/Documents/crossfit-site/src/pages/Wod.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MuscleMapFull from '../components/MuscleMap/MuscleMapFull';\n\nconst muscleExercises = {\n  'quads-left': ['20 squats', '15 lunges', '10 jump squats'],\n  'quads-right': ['20 squats', '15 lunges', '10 jump squats'],\n  'abs-left': ['30s plank', '20 crunches', '15 leg raises'],\n  'abs-right': ['30s plank', '20 crunches', '15 leg raises'],\n  'hamstrings-left': ['15 hip thrusts', '20 deadlifts', '30s bridge hold'],\n  'hamstrings-right': ['15 hip thrusts', '20 deadlifts', '30s bridge hold'],\n  // Ajoute plus ici...\n};\n\nconst getRandomWod = (exercises) => {\n  const shuffled = [...exercises].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, 3);\n};\n\nconst Wod = () => {\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [wod, setWod] = useState([]);\n\n  const handleMuscleSelect = (muscleId) => {\n    setSelectedMuscle(muscleId);\n\n    const exercises = muscleExercises[muscleId];\n    if (exercises) {\n      const generatedWod = getRandomWod(exercises);\n      setWod(generatedWod);\n    } else {\n      setWod([]);\n    }\n  };\n\n  return (\n    <div className=\"wod-page\" style={{ textAlign: 'center', padding: '2rem' }}>\n      <h1>G√©n√©rateur de WOD cibl√©</h1>\n      <p>S√©lectionne une zone musculaire sur le visuel pour g√©n√©rer un entra√Ænement personnalis√©.</p>\n\n     <MuscleMapFull onSelect={handleMuscleSelect} />\n\n      {selectedMuscle && (\n        <div style={{ marginTop: '2rem' }}>\n          <h2>WOD pour : <span style={{ textTransform: 'capitalize' }}>{selectedMuscle}</span></h2>\n          {wod.length > 0 ? (\n            <ul style={{ listStyle: 'none', padding: 0 }}>\n              {wod.map((ex, index) => (\n                <li key={index} style={{ margin: '0.5rem 0', fontSize: '1.2rem' }}>üî• {ex}</li>\n              ))}\n            </ul>\n          ) : (\n            <p style={{ fontStyle: 'italic' }}>Aucun exercice disponible pour ce muscle.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Wod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}